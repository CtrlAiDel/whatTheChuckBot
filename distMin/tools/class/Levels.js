"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Levels=void 0;const tslib_1=require("tslib"),discord_xp_1=(0,tslib_1.__importDefault)(require("discord-xp")),mongoose=require("mongoose"),models={levels:require("../../../node_modules/discord-xp/models/levels.js")};class Levels extends discord_xp_1.default{static async appendRandomXp(e,s,r){s=Math.floor(Math.random()*r)+s;if(e.id&&e.guildID)return Levels.appendXp(e.userID,e.guildID,s)}constructor(){super();let e=process.env.mongoUrl;"docker"===process.env.enviroment&&(e=process.env.mongoDockerUrl),console.warn("Mongoose: Trying to connect to "+e),this.connect(e)&&console.warn("Levels DB is connected !")}async connect(e){return await Levels.setURL(e),1}static async fetchLeaderboard(e,s){if(!e)throw new TypeError("A guild id was not provided.");e=await models.levels.find({guildID:e}).sort([["xp","descending"]]).exec();return s?e.slice(0,s):e}static async updateUsers(s){let e=!1;const r=await s.members.cache;let t=r.size;const o=await Levels.fetchLeaderboard(s.id);let n=[];r.forEach(r=>{if(r.user.bot)t--;else{let s=!1;for(let e=0;e<o.length&&(s=r.id===o[e].userID,!s);e++);s||n.push(r.id)}});let l=0;return 0<n.length&&(e=!0,n.forEach(e=>{e=Levels.createUser(e,s.id);l=e?l+1:l})),e?e&&l===n.length?`We've updated: ${l}/${t} human members! ğŸš€ğŸš€ğŸš€ All members are registered!`:e?`We've updated: ${l}/${t} human members! ğŸš€ğŸš€ğŸš€ But ${n.length-l} users are missing!`:void 0:"All human members are already registered! ğŸš€ğŸš€ğŸš€"}}exports.Levels=Levels;