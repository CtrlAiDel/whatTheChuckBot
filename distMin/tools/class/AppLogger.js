"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AppLogger=void 0;const fs=require("fs"),pino=require("pino");class AppLogger{id="ffffffff";type;lowestLevel="trace";multistream=!0;logger;logFolder=process.cwd()+"/logs";constructor(e,t,s,i){t?this.id=t:this.id,e?this.type=e:this.type,s?this.lowestLevel=s:this.lowestLevel,i?this.multistream=i:this.multistream,this.logFolder=`${this.logFolder}/${this.type}/`+this.id,this.logger=this.innit()}appendDestinations(t,s=!1,i=4096,e){var o;const r=["trace","debug","info","warn","error","fatal"];for(let e=r.indexOf(this.lowestLevel);e<r.length;e++)o={level:r[e],stream:fs.createWriteStream(`${this.logFolder}/${10*(e+1)}-${r[e]}.out`,{flags:"a+"}),sync:s,minLength:i},t.push(o)}innit(){var e;return this.multistream?(fs.mkdirSync(this.logFolder,{recursive:!0}),this.appendDestinations(e=[]),pino({level:this.lowestLevel},pino.multistream(e))):(fs.mkdirSync(this.logFolder,{recursive:!0}),e=pino.transport({target:"pino/file",options:{destination:`${this.logFolder}/${this.lowestLevel}-filteredUp.out`}}),pino(e))}}exports.AppLogger=AppLogger;